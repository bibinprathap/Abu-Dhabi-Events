{"version":3,"sources":["uitils/apiCall.js","components/SectionEventMobile.js","components/smoothScroll.js","components/Venues.js","components/ScrollableSection.js","uitils/createMap.js","App.js","uitils/building3d.js","serviceWorker.js","index.js"],"names":["mapboxgl","require","eventsEndPoint","getInfoVenues","dataset","filteredCoordinates","_embedded","events","map","event","venues","idVenue","id","nameVenue","name","location","city","coordinatesStr","undefined","Object","values","cleanCoordinate","filter","c","coordinate","Number","length","idsVenues","eventGroupped","forEach","createSectionsCoordinate","ids","keys","container","i","center","bearing","zoom","speed","curve","pitch","SectionEventMobile","isOnScreen","className","onChange","isVisible","info","nameEvent","day","dates","start","localDate","hour","localTime","key","Math","random","SmoothScrolling","timer","stop","clearTimeout","this","scrollTo","callback","startTime","settings","outQuint","x","t","b","d","node","document","getElementById","nodeTop","offsetTop","nodeHeight","offsetHeight","body","html","documentElement","height","max","scrollHeight","clientHeight","windowHeight","window","innerHeight","offset","pageYOffset","delta","bottomScrollableY","targetY","Date","now","clearInterval","setTimeout","step","yScroll","elapsed","Venues","passId","uids","useState","isOpen","setIsOpen","closeIt","onClick","clickVenue","intial","ScrollableSection","infoVenues","currentId","setCurrentId","getId","console","log","useEffect","flyTo","next","indexOf","scrollToNext","_","accessToken","Map","style","App","eventsGroupedPerVenue","setEventsGroupedPerVenue","venuesCoordinates","setVenueCoordinates","on","labelLayerId","layers","getStyle","type","layout","addLayer","source","minzoom","paint","ky","get","json","then","infos","venueGroups","venuesCoordinatesGroup","coordinates","addControl","FullscreenControl","el","createElement","Marker","setLngLat","addTo","addMarkerVenue","catch","err","isEmpty","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c62b1395.chunk.js","sourcesContent":["import ky from \"ky\";\nconst mapboxgl = require(\"mapbox-gl/dist/mapbox-gl.js\");\n\nconst accessKey = \"k7WafyB240GbvXdwJ5wgeCq4LiceFjnY\";\n \n \nconst limitEvents = 200;\n\nconst eventsEndPoint = `https://app.ticketmaster.com/discovery/v2/events.json?apikey=${accessKey}&locale=*&countryCode=ae&size=${limitEvents}&sort=date,asc`;\nexport const getEventsInfo = () => {\n  return ky.get(eventsEndPoint).json();\n};\n\nexport function getInfoVenues(dataset) {\n  const infoEvent = dataset._embedded.events.map((event) => {\n    const {\n      id: idVenue,\n      name: nameVenue,\n      city,\n      location,\n    } = event._embedded.venues[0];\n\n    let coordinatesStr =\n      location !== undefined &&\n      location !== null &&\n      location !== false &&\n      Object.values(location);\n    if (coordinatesStr === false) {\n      coordinatesStr = [0, 0];\n    }\n\n    const cleanCoordinate = coordinatesStr\n      .filter((c) => c)\n      .map((coordinate) => Number(coordinate));\n\n    return {\n      idVenue,\n      nameVenue,\n      cleanCoordinate,\n      event,\n    };\n  });\n\n  const filteredCoordinates = infoEvent.filter((event) => {\n    return event.cleanCoordinate.length > 0;\n  });\n  const idsVenues = filteredCoordinates.map((event) => event.idVenue);\n\n  const eventGroupped = {};\n\n  idsVenues.forEach((id) => {\n    return (eventGroupped[id] = filteredCoordinates.filter((event) => {\n      return event.idVenue === id;\n    }));\n  });\n\n  return eventGroupped;\n}\n\nexport function createSectionsCoordinate(dataset) {\n  const ids = Object.keys(dataset);\n  const container = {};\n\n  ids.forEach((id, i) => {\n    const name = dataset[ids[i]][0].nameVenue;\n\n    return (container[id] = {\n      center: dataset[id][0].cleanCoordinate,\n      bearing: 27,\n      zoom: 17,\n      speed: 1,\n      curve: 0.7,\n      pitch: 45,\n      name,\n    });\n  });\n\n  return container;\n}\n\nexport function addMarkerVenue(coordinates, map) {\n  const ids = Object.keys(coordinates);\n  map.addControl(new mapboxgl.FullscreenControl());\n\n  ids.forEach((id) => {\n    var el = document.createElement(\"div\");\n    el.className = \"marker\";\n    new mapboxgl.Marker(el).setLngLat(coordinates[id].center).addTo(map);\n  });\n}\n","import React from \"react\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nexport function SectionEventMobile({ events, id, isOnScreen }) {\n  const onChange = (isVisible) => isVisible && isOnScreen(id);\n  return (\n    <section className={`event`}>\n      <VisibilitySensor onChange={onChange}>\n        {({ isVisible }) => {\n          return <p className=\"name-location\">{events[id][0].nameVenue}</p>;\n        }}\n      </VisibilitySensor>\n      <div className=\"cards\">\n        {events[id].map((info) => {\n          const nameEvent = info.event.name;\n          const day = info.event.dates.start.localDate;\n          const hour = info.event.dates.start.localTime;\n\n          return (\n            <div key={Math.random()} className=\"card\">\n              <p className=\"name-event\">{nameEvent}</p>\n              <p>{day}</p>\n              <p>{hour}</p>\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n}\n","var SmoothScrolling = {\n  timer: null,\n\n  stop: function () {\n    clearTimeout(this.timer);\n  },\n\n  scrollTo: function (id, callback) {\n    var settings = {\n      duration: 1000,\n      easing: {\n        outQuint: function (x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n      },\n    };\n    var percentage;\n    var startTime;\n    var node = document.getElementById(id);\n    var nodeTop = node.offsetTop;\n    var nodeHeight = node.offsetHeight;\n    var body = document.body;\n    var html = document.documentElement;\n    var height = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n    var windowHeight = window.innerHeight;\n    var offset = window.pageYOffset;\n    var delta = nodeTop - offset;\n    var bottomScrollableY = height - windowHeight;\n    var targetY =\n      bottomScrollableY < delta\n        ? bottomScrollableY - (height - nodeTop - nodeHeight + offset)\n        : delta;\n\n    startTime = Date.now();\n    percentage = 0;\n\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n\n    function step() {\n      var yScroll;\n      var elapsed = Date.now() - startTime;\n\n      if (elapsed > settings.duration) {\n        clearTimeout(this.timer);\n      }\n\n      percentage = elapsed / settings.duration;\n\n      if (percentage > 1) {\n        clearTimeout(this.timer);\n\n        if (callback) {\n          callback();\n        }\n      } else {\n        yScroll = settings.easing.outQuint(\n          0,\n          elapsed,\n          offset,\n          targetY,\n          settings.duration\n        );\n        window.scrollTo(0, yScroll);\n        this.timer = setTimeout(step, 10);\n      }\n    }\n\n    this.timer = setTimeout(step, 10);\n  },\n};\n\nexport default SmoothScrolling;\n","import React, { useState } from \"react\";\n\nexport function Venues({ venues, passId }) {\n  const uids = Object.keys(venues);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const closeIt = () => setIsOpen(false);\n  const openIt = () => setIsOpen(true);\n  const clickVenue = (id) => {\n    closeIt();\n    passId(id);\n  };\n\n  return (\n    <>\n      <button className=\"btn-open\" onClick={openIt}>\n        All venues\n      </button>\n      <div className={`container-venues ${isOpen ? \"open\" : \"close\"}`}>\n        <div className={`venue-page `}>\n          <button className=\"btn-close\" onClick={closeIt}>\n            close\n          </button>\n          {uids.map((id) => {\n            return (\n              <div className={`${id} venue`} onClick={() => clickVenue(id)}>\n                <h1> {venues[id].name}</h1>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { SectionEventMobile } from \"./SectionEventMobile\";\nimport SmoothScrolling from \"./smoothScroll\";\nimport { Venues } from \"./Venues\"; \nconst initialCenter =  [54.35518, 24.48276];\n\nconst intial = {\n  center: initialCenter,\n  bearing: 27,\n  zoom: 18,\n  speed: 1,\n  curve: 0.7,\n  pitch: 45,\n};\n\nexport function ScrollableSection({ infoVenues, map, events }) {\n  const uids = Object.keys(infoVenues);\n\n  const [currentId, setCurrentId] = useState(\"\");\n\n  const getId = (id) => {\n    console.log(id);\n    setCurrentId(id);\n  };\n\n  const scrollToVenue = (id) => {\n    setCurrentId(id);\n    SmoothScrolling.scrollTo(id);\n  };\n\n  const scrollToNext = (id) => {\n    const next = uids.indexOf(id) + 1;\n    if (next < uids.length) {\n      SmoothScrolling.scrollTo(uids[next]);\n    }\n  };\n\n  // setTimeout(() => {\n  //   scrollToNext(\"Zb98xZKrZevvvedZ5rrj5urKO2\");\n  // }, 3000);\n\n  useEffect(() => {\n    map.flyTo(infoVenues[currentId] || intial);\n  }, [currentId]);\n\n  return (\n    <div className=\"bk\">\n      <button className=\"btn-next\" onClick={() => scrollToNext(currentId)}>\n        next venue\n      </button>\n      <Venues venues={infoVenues} passId={scrollToVenue} />\n\n      <section id=\"first\" className=\"section-event\">\n        <h1>\n          <span className=\"white\">Upcoming</span> events in the\n          <span>UAE</span>.\n        </h1>\n        <p>Scroll down</p>\n      </section>\n      {uids.map((id) => {\n        return (\n          <section key={Math.random()} className=\"section-event\" id={id}>\n            <SectionEventMobile id={id} events={events} isOnScreen={getId} />\n          </section>\n        );\n      })}\n    </div>\n  );\n}\n","const mapboxgl = require(\"mapbox-gl/dist/mapbox-gl.js\");\n\nexport function createMap() {\n  const initialCenter = [3.18, 40.01];\n\n  mapboxgl.accessToken =\n    \"pk.eyJ1IjoiZmxhdmlvYmVybmFzY29uaSIsImEiOiJjazk5b3Q0amcwMWhhM2ZwN213N3liZ3FtIn0.ByKkoMxbBq27kygkf1KqlA\";\n\n  return new mapboxgl.Map({\n    container: \"map\",\n    style: \"mapbox://styles/mapbox/dark-v10\",\n    center: initialCenter,\n    zoom: 3,\n    bearing: 27,\n    pitch: 45,\n  });\n}\n","import React, { useEffect, useState } from \"react\";\nimport { addBuilding3D } from \"./uitils/building3d\";\nimport {\n  getInfoVenues,\n  createSectionsCoordinate,\n  getEventsInfo,\n  addMarkerVenue,\n} from \"./uitils/apiCall\";\nimport { ScrollableSection } from \"./components/ScrollableSection\";\nimport { createMap } from \"./uitils/createMap\";\n\nconst _ = require(\"lodash\");\n\nconst map = createMap();\n\nexport function App() {\n  const [eventsGroupedPerVenue, setEventsGroupedPerVenue] = useState({});\n  const [venuesCoordinates, setVenueCoordinates] = useState({});\n\n  useEffect(() => {\n    addBuilding3D(map);\n    getEventsInfo()\n      .then((infos) => {\n        const venueGroups = getInfoVenues(infos);\n        const venuesCoordinatesGroup = createSectionsCoordinate(\n          getInfoVenues(infos)\n        );\n        setEventsGroupedPerVenue(venueGroups);\n        setVenueCoordinates(venuesCoordinatesGroup);\n        addMarkerVenue(createSectionsCoordinate(getInfoVenues(infos)), map);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  if (!_.isEmpty(venuesCoordinates)) {\n    return (\n      <ScrollableSection\n        events={eventsGroupedPerVenue}\n        infoVenues={venuesCoordinates}\n        map={map}\n      />\n    );\n  } else {\n    return <></>;\n  }\n}\n","export function addBuilding3D(map) {\n  map.on(\"load\", function () {\n    // Insert the layer beneath any symbol layer.\n    var layers = map.getStyle().layers;\n\n    var labelLayerId;\n    for (var i = 0; i < layers.length; i++) {\n      if (layers[i].type === \"symbol\" && layers[i].layout[\"text-field\"]) {\n        labelLayerId = layers[i].id;\n        break;\n      }\n    }\n\n    map.addLayer(\n      {\n        id: \"3d-buildings\",\n        source: \"composite\",\n        \"source-layer\": \"building\",\n        filter: [\"==\", \"extrude\", \"true\"],\n        type: \"fill-extrusion\",\n        minzoom: 15,\n        paint: {\n          \"fill-extrusion-color\": \"#aaa\",\n\n          // use an 'interpolate' expression to add a smooth transition effect to the\n          // buildings as the user zooms in\n          \"fill-extrusion-height\": [\n            \"interpolate\",\n            [\"linear\"],\n            [\"zoom\"],\n            15,\n            0,\n            15.05,\n            [\"get\", \"height\"],\n          ],\n          \"fill-extrusion-base\": [\n            \"interpolate\",\n            [\"linear\"],\n            [\"zoom\"],\n            15,\n            0,\n            15.05,\n            [\"get\", \"min_height\"],\n          ],\n          \"fill-extrusion-opacity\": 0.6,\n        },\n      },\n      labelLayerId\n    );\n  });\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}